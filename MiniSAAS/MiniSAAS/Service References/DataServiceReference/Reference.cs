//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace MiniSAAS.DataServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectDescription", Namespace="http://schemas.datacontract.org/2004/07/MiniSAAS.Back.Classes")]
    public partial class ObjectDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, string> FieldsField;
        
        private string ObjNameField;
        
        private int OrgIDField;
        
        private string PrimaryKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjName {
            get {
                return this.ObjNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjNameField, value) != true)) {
                    this.ObjNameField = value;
                    this.RaisePropertyChanged("ObjName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryKey {
            get {
                return this.PrimaryKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyField, value) != true)) {
                    this.PrimaryKeyField = value;
                    this.RaisePropertyChanged("PrimaryKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataDescription", Namespace="http://schemas.datacontract.org/2004/07/MiniSAAS.Back.Classes")]
    public partial class DataDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<System.Collections.Generic.List<string>> DataField;
        
        private System.Collections.Generic.List<string> FieldsField;
        
        private string ObjNameField;
        
        private int OrgIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.List<string>> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Fields {
            get {
                return this.FieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldsField, value) != true)) {
                    this.FieldsField = value;
                    this.RaisePropertyChanged("Fields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjName {
            get {
                return this.ObjNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjNameField, value) != true)) {
                    this.ObjNameField = value;
                    this.RaisePropertyChanged("ObjName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/RegisterTenant", ReplyAction="http://tempuri.org/IDataService/RegisterTenantResponse")]
        System.IAsyncResult BeginRegisterTenant(string emailid, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/LoginTenant", ReplyAction="http://tempuri.org/IDataService/LoginTenantResponse")]
        System.IAsyncResult BeginLoginTenant(string emailid, string password, System.AsyncCallback callback, object asyncState);
        
        int EndLoginTenant(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/CreateObject", ReplyAction="http://tempuri.org/IDataService/CreateObjectResponse")]
        System.IAsyncResult BeginCreateObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/DeleteObject", ReplyAction="http://tempuri.org/IDataService/DeleteObjectResponse")]
        System.IAsyncResult BeginDeleteObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteObject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/GetObjectCollection", ReplyAction="http://tempuri.org/IDataService/GetObjectCollectionResponse")]
        System.IAsyncResult BeginGetObjectCollection(int orgid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> EndGetObjectCollection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/InsertData", ReplyAction="http://tempuri.org/IDataService/InsertDataResponse")]
        System.IAsyncResult BeginInsertData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState);
        
        int EndInsertData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/ViewData", ReplyAction="http://tempuri.org/IDataService/ViewDataResponse")]
        System.IAsyncResult BeginViewData(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState);
        
        MiniSAAS.DataServiceReference.DataDescription EndViewData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataService/DeleteData", ReplyAction="http://tempuri.org/IDataService/DeleteDataResponse")]
        System.IAsyncResult BeginDeleteData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : MiniSAAS.DataServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetObjectCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetObjectCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ViewDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ViewDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MiniSAAS.DataServiceReference.DataDescription Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MiniSAAS.DataServiceReference.DataDescription)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<MiniSAAS.DataServiceReference.IDataService>, MiniSAAS.DataServiceReference.IDataService {
        
        private BeginOperationDelegate onBeginRegisterTenantDelegate;
        
        private EndOperationDelegate onEndRegisterTenantDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginTenantDelegate;
        
        private EndOperationDelegate onEndLoginTenantDelegate;
        
        private System.Threading.SendOrPostCallback onLoginTenantCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateObjectDelegate;
        
        private EndOperationDelegate onEndCreateObjectDelegate;
        
        private System.Threading.SendOrPostCallback onCreateObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteObjectDelegate;
        
        private EndOperationDelegate onEndDeleteObjectDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteObjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetObjectCollectionDelegate;
        
        private EndOperationDelegate onEndGetObjectCollectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetObjectCollectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDataDelegate;
        
        private EndOperationDelegate onEndInsertDataDelegate;
        
        private System.Threading.SendOrPostCallback onInsertDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginViewDataDelegate;
        
        private EndOperationDelegate onEndViewDataDelegate;
        
        private System.Threading.SendOrPostCallback onViewDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDataDelegate;
        
        private EndOperationDelegate onEndDeleteDataDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RegisterTenantCompletedEventArgs> RegisterTenantCompleted;
        
        public event System.EventHandler<LoginTenantCompletedEventArgs> LoginTenantCompleted;
        
        public event System.EventHandler<CreateObjectCompletedEventArgs> CreateObjectCompleted;
        
        public event System.EventHandler<DeleteObjectCompletedEventArgs> DeleteObjectCompleted;
        
        public event System.EventHandler<GetObjectCollectionCompletedEventArgs> GetObjectCollectionCompleted;
        
        public event System.EventHandler<InsertDataCompletedEventArgs> InsertDataCompleted;
        
        public event System.EventHandler<ViewDataCompletedEventArgs> ViewDataCompleted;
        
        public event System.EventHandler<DeleteDataCompletedEventArgs> DeleteDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginRegisterTenant(string emailid, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterTenant(emailid, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MiniSAAS.DataServiceReference.IDataService.EndRegisterTenant(System.IAsyncResult result) {
            return base.Channel.EndRegisterTenant(result);
        }
        
        private System.IAsyncResult OnBeginRegisterTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string emailid = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginRegisterTenant(emailid, password, callback, asyncState);
        }
        
        private object[] OnEndRegisterTenant(System.IAsyncResult result) {
            bool retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndRegisterTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterTenantCompleted(object state) {
            if ((this.RegisterTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterTenantCompleted(this, new RegisterTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterTenantAsync(string emailid, string password) {
            this.RegisterTenantAsync(emailid, password, null);
        }
        
        public void RegisterTenantAsync(string emailid, string password, object userState) {
            if ((this.onBeginRegisterTenantDelegate == null)) {
                this.onBeginRegisterTenantDelegate = new BeginOperationDelegate(this.OnBeginRegisterTenant);
            }
            if ((this.onEndRegisterTenantDelegate == null)) {
                this.onEndRegisterTenantDelegate = new EndOperationDelegate(this.OnEndRegisterTenant);
            }
            if ((this.onRegisterTenantCompletedDelegate == null)) {
                this.onRegisterTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterTenantCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterTenantDelegate, new object[] {
                        emailid,
                        password}, this.onEndRegisterTenantDelegate, this.onRegisterTenantCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginLoginTenant(string emailid, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginTenant(emailid, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MiniSAAS.DataServiceReference.IDataService.EndLoginTenant(System.IAsyncResult result) {
            return base.Channel.EndLoginTenant(result);
        }
        
        private System.IAsyncResult OnBeginLoginTenant(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string emailid = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginLoginTenant(emailid, password, callback, asyncState);
        }
        
        private object[] OnEndLoginTenant(System.IAsyncResult result) {
            int retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndLoginTenant(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginTenantCompleted(object state) {
            if ((this.LoginTenantCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginTenantCompleted(this, new LoginTenantCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginTenantAsync(string emailid, string password) {
            this.LoginTenantAsync(emailid, password, null);
        }
        
        public void LoginTenantAsync(string emailid, string password, object userState) {
            if ((this.onBeginLoginTenantDelegate == null)) {
                this.onBeginLoginTenantDelegate = new BeginOperationDelegate(this.OnBeginLoginTenant);
            }
            if ((this.onEndLoginTenantDelegate == null)) {
                this.onEndLoginTenantDelegate = new EndOperationDelegate(this.OnEndLoginTenant);
            }
            if ((this.onLoginTenantCompletedDelegate == null)) {
                this.onLoginTenantCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginTenantCompleted);
            }
            base.InvokeAsync(this.onBeginLoginTenantDelegate, new object[] {
                        emailid,
                        password}, this.onEndLoginTenantDelegate, this.onLoginTenantCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginCreateObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateObject(od, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MiniSAAS.DataServiceReference.IDataService.EndCreateObject(System.IAsyncResult result) {
            return base.Channel.EndCreateObject(result);
        }
        
        private System.IAsyncResult OnBeginCreateObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MiniSAAS.DataServiceReference.ObjectDescription od = ((MiniSAAS.DataServiceReference.ObjectDescription)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginCreateObject(od, callback, asyncState);
        }
        
        private object[] OnEndCreateObject(System.IAsyncResult result) {
            bool retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndCreateObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateObjectCompleted(object state) {
            if ((this.CreateObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateObjectCompleted(this, new CreateObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateObjectAsync(MiniSAAS.DataServiceReference.ObjectDescription od) {
            this.CreateObjectAsync(od, null);
        }
        
        public void CreateObjectAsync(MiniSAAS.DataServiceReference.ObjectDescription od, object userState) {
            if ((this.onBeginCreateObjectDelegate == null)) {
                this.onBeginCreateObjectDelegate = new BeginOperationDelegate(this.OnBeginCreateObject);
            }
            if ((this.onEndCreateObjectDelegate == null)) {
                this.onEndCreateObjectDelegate = new EndOperationDelegate(this.OnEndCreateObject);
            }
            if ((this.onCreateObjectCompletedDelegate == null)) {
                this.onCreateObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateObjectCompleted);
            }
            base.InvokeAsync(this.onBeginCreateObjectDelegate, new object[] {
                        od}, this.onEndCreateObjectDelegate, this.onCreateObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginDeleteObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteObject(od, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MiniSAAS.DataServiceReference.IDataService.EndDeleteObject(System.IAsyncResult result) {
            return base.Channel.EndDeleteObject(result);
        }
        
        private System.IAsyncResult OnBeginDeleteObject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MiniSAAS.DataServiceReference.ObjectDescription od = ((MiniSAAS.DataServiceReference.ObjectDescription)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginDeleteObject(od, callback, asyncState);
        }
        
        private object[] OnEndDeleteObject(System.IAsyncResult result) {
            bool retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndDeleteObject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteObjectCompleted(object state) {
            if ((this.DeleteObjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteObjectCompleted(this, new DeleteObjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteObjectAsync(MiniSAAS.DataServiceReference.ObjectDescription od) {
            this.DeleteObjectAsync(od, null);
        }
        
        public void DeleteObjectAsync(MiniSAAS.DataServiceReference.ObjectDescription od, object userState) {
            if ((this.onBeginDeleteObjectDelegate == null)) {
                this.onBeginDeleteObjectDelegate = new BeginOperationDelegate(this.OnBeginDeleteObject);
            }
            if ((this.onEndDeleteObjectDelegate == null)) {
                this.onEndDeleteObjectDelegate = new EndOperationDelegate(this.OnEndDeleteObject);
            }
            if ((this.onDeleteObjectCompletedDelegate == null)) {
                this.onDeleteObjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteObjectCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteObjectDelegate, new object[] {
                        od}, this.onEndDeleteObjectDelegate, this.onDeleteObjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginGetObjectCollection(int orgid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetObjectCollection(orgid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> MiniSAAS.DataServiceReference.IDataService.EndGetObjectCollection(System.IAsyncResult result) {
            return base.Channel.EndGetObjectCollection(result);
        }
        
        private System.IAsyncResult OnBeginGetObjectCollection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orgid = ((int)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginGetObjectCollection(orgid, callback, asyncState);
        }
        
        private object[] OnEndGetObjectCollection(System.IAsyncResult result) {
            System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndGetObjectCollection(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetObjectCollectionCompleted(object state) {
            if ((this.GetObjectCollectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetObjectCollectionCompleted(this, new GetObjectCollectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetObjectCollectionAsync(int orgid) {
            this.GetObjectCollectionAsync(orgid, null);
        }
        
        public void GetObjectCollectionAsync(int orgid, object userState) {
            if ((this.onBeginGetObjectCollectionDelegate == null)) {
                this.onBeginGetObjectCollectionDelegate = new BeginOperationDelegate(this.OnBeginGetObjectCollection);
            }
            if ((this.onEndGetObjectCollectionDelegate == null)) {
                this.onEndGetObjectCollectionDelegate = new EndOperationDelegate(this.OnEndGetObjectCollection);
            }
            if ((this.onGetObjectCollectionCompletedDelegate == null)) {
                this.onGetObjectCollectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetObjectCollectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetObjectCollectionDelegate, new object[] {
                        orgid}, this.onEndGetObjectCollectionDelegate, this.onGetObjectCollectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginInsertData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertData(dd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MiniSAAS.DataServiceReference.IDataService.EndInsertData(System.IAsyncResult result) {
            return base.Channel.EndInsertData(result);
        }
        
        private System.IAsyncResult OnBeginInsertData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MiniSAAS.DataServiceReference.DataDescription dd = ((MiniSAAS.DataServiceReference.DataDescription)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginInsertData(dd, callback, asyncState);
        }
        
        private object[] OnEndInsertData(System.IAsyncResult result) {
            int retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndInsertData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertDataCompleted(object state) {
            if ((this.InsertDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertDataCompleted(this, new InsertDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertDataAsync(MiniSAAS.DataServiceReference.DataDescription dd) {
            this.InsertDataAsync(dd, null);
        }
        
        public void InsertDataAsync(MiniSAAS.DataServiceReference.DataDescription dd, object userState) {
            if ((this.onBeginInsertDataDelegate == null)) {
                this.onBeginInsertDataDelegate = new BeginOperationDelegate(this.OnBeginInsertData);
            }
            if ((this.onEndInsertDataDelegate == null)) {
                this.onEndInsertDataDelegate = new EndOperationDelegate(this.OnEndInsertData);
            }
            if ((this.onInsertDataCompletedDelegate == null)) {
                this.onInsertDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertDataCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDataDelegate, new object[] {
                        dd}, this.onEndInsertDataDelegate, this.onInsertDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginViewData(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginViewData(od, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MiniSAAS.DataServiceReference.DataDescription MiniSAAS.DataServiceReference.IDataService.EndViewData(System.IAsyncResult result) {
            return base.Channel.EndViewData(result);
        }
        
        private System.IAsyncResult OnBeginViewData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MiniSAAS.DataServiceReference.ObjectDescription od = ((MiniSAAS.DataServiceReference.ObjectDescription)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginViewData(od, callback, asyncState);
        }
        
        private object[] OnEndViewData(System.IAsyncResult result) {
            MiniSAAS.DataServiceReference.DataDescription retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndViewData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnViewDataCompleted(object state) {
            if ((this.ViewDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ViewDataCompleted(this, new ViewDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ViewDataAsync(MiniSAAS.DataServiceReference.ObjectDescription od) {
            this.ViewDataAsync(od, null);
        }
        
        public void ViewDataAsync(MiniSAAS.DataServiceReference.ObjectDescription od, object userState) {
            if ((this.onBeginViewDataDelegate == null)) {
                this.onBeginViewDataDelegate = new BeginOperationDelegate(this.OnBeginViewData);
            }
            if ((this.onEndViewDataDelegate == null)) {
                this.onEndViewDataDelegate = new EndOperationDelegate(this.OnEndViewData);
            }
            if ((this.onViewDataCompletedDelegate == null)) {
                this.onViewDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnViewDataCompleted);
            }
            base.InvokeAsync(this.onBeginViewDataDelegate, new object[] {
                        od}, this.onEndViewDataDelegate, this.onViewDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MiniSAAS.DataServiceReference.IDataService.BeginDeleteData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteData(dd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MiniSAAS.DataServiceReference.IDataService.EndDeleteData(System.IAsyncResult result) {
            return base.Channel.EndDeleteData(result);
        }
        
        private System.IAsyncResult OnBeginDeleteData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MiniSAAS.DataServiceReference.DataDescription dd = ((MiniSAAS.DataServiceReference.DataDescription)(inValues[0]));
            return ((MiniSAAS.DataServiceReference.IDataService)(this)).BeginDeleteData(dd, callback, asyncState);
        }
        
        private object[] OnEndDeleteData(System.IAsyncResult result) {
            int retVal = ((MiniSAAS.DataServiceReference.IDataService)(this)).EndDeleteData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDataCompleted(object state) {
            if ((this.DeleteDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDataCompleted(this, new DeleteDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDataAsync(MiniSAAS.DataServiceReference.DataDescription dd) {
            this.DeleteDataAsync(dd, null);
        }
        
        public void DeleteDataAsync(MiniSAAS.DataServiceReference.DataDescription dd, object userState) {
            if ((this.onBeginDeleteDataDelegate == null)) {
                this.onBeginDeleteDataDelegate = new BeginOperationDelegate(this.OnBeginDeleteData);
            }
            if ((this.onEndDeleteDataDelegate == null)) {
                this.onEndDeleteDataDelegate = new EndOperationDelegate(this.OnEndDeleteData);
            }
            if ((this.onDeleteDataCompletedDelegate == null)) {
                this.onDeleteDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDataCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDataDelegate, new object[] {
                        dd}, this.onEndDeleteDataDelegate, this.onDeleteDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MiniSAAS.DataServiceReference.IDataService CreateChannel() {
            return new DataServiceClientChannel(this);
        }
        
        private class DataServiceClientChannel : ChannelBase<MiniSAAS.DataServiceReference.IDataService>, MiniSAAS.DataServiceReference.IDataService {
            
            public DataServiceClientChannel(System.ServiceModel.ClientBase<MiniSAAS.DataServiceReference.IDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegisterTenant(string emailid, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailid;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("RegisterTenant", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRegisterTenant(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RegisterTenant", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoginTenant(string emailid, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = emailid;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("LoginTenant", _args, callback, asyncState);
                return _result;
            }
            
            public int EndLoginTenant(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("LoginTenant", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = od;
                System.IAsyncResult _result = base.BeginInvoke("CreateObject", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteObject(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = od;
                System.IAsyncResult _result = base.BeginInvoke("DeleteObject", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteObject(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteObject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetObjectCollection(int orgid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orgid;
                System.IAsyncResult _result = base.BeginInvoke("GetObjectCollection", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> EndGetObjectCollection(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription> _result = ((System.Collections.Generic.List<MiniSAAS.DataServiceReference.ObjectDescription>)(base.EndInvoke("GetObjectCollection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dd;
                System.IAsyncResult _result = base.BeginInvoke("InsertData", _args, callback, asyncState);
                return _result;
            }
            
            public int EndInsertData(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("InsertData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginViewData(MiniSAAS.DataServiceReference.ObjectDescription od, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = od;
                System.IAsyncResult _result = base.BeginInvoke("ViewData", _args, callback, asyncState);
                return _result;
            }
            
            public MiniSAAS.DataServiceReference.DataDescription EndViewData(System.IAsyncResult result) {
                object[] _args = new object[0];
                MiniSAAS.DataServiceReference.DataDescription _result = ((MiniSAAS.DataServiceReference.DataDescription)(base.EndInvoke("ViewData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteData(MiniSAAS.DataServiceReference.DataDescription dd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = dd;
                System.IAsyncResult _result = base.BeginInvoke("DeleteData", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteData(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteData", _args, result)));
                return _result;
            }
        }
    }
}
